name: Build and Release SwigZinc Python Wheels using OSMESA

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'The git tag of the release to upload the wheels to (e.g., v0.1.0).'
        required: true
        default: 'osmesa'
        type: string

jobs:
  build-python-wheels:
    name: Build SwigZinc for Python ${{ matrix.python-version }} on Linux
    runs-on: ubuntu-24.04
    
    # Define a build matrix to run this job for multiple Python versions
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4

      - name: 2. Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 3. Install build tools and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel
          sudo apt-get update && sudo apt-get install -y swig

      - name: 4. Download and Extract Zinc C++ Library
        run: |
          ZINC_URL="https://github.com/hsorby/zinc/releases/download/osmesa/zinc-osmesa-linux.tar.gz"
          
          echo "Downloading Zinc library from ${ZINC_URL}"
          curl -L -o zinc-dependency.tar.gz "${ZINC_URL}"
          
          # Create a dedicated directory for the dependency to keep the workspace clean
          mkdir zinc-install
          echo "Extracting Zinc library..."
          tar -xzf zinc-dependency.tar.gz -C zinc-install
          echo "Zinc library extracted to '${{ github.workspace }}/zinc-install'"

      - name: 5. Configure SwigZinc build with CMake
        run: |
          cmake -S . \
                -B build-swigzinc-release \
                -DCMAKE_BUILD_TYPE=Release \
                -DZinc_DIR=${{ github.workspace }}/zinc-install/share/cmake/ZINC

      - name: 6. Build SwigZinc C++ components
        run: |
          cmake --build build-swigzinc-release --config Release --parallel

      - name: 7. Build Python wheel
        id: build_wheel
        run: |
          python -m build --wheel build-swigzinc-release/src/python
          
          WHEEL_PATH=$(ls build-swigzinc-release/src/python/dist/*.whl)
          echo "Built wheel at: ${WHEEL_PATH}"
          echo "ARTIFACT_PATH=${WHEEL_PATH}" >> $GITHUB_ENV

      - name: 8. Upload Python Wheel to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ARTIFACT_PATH }}
          tag_name: ${{ inputs.release_tag }}

